{"uid":"92bbe1c190e5777c","name":"Validate Council Output [ChorleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5bdae4358e62a7577eff481397583199","time":{"start":1728086791949,"stop":1728087132890,"duration":340941},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'tbody'","statusTrace":"fixturefunc = <function scrape_step at 0x7f86e347dda0>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChorleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f86edfec050>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ChorleyCouncil.CouncilClass object at 0x7f86f5ac4d70>, page = ''\nkwargs = {'council_module_str': 'ChorleyCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"bbd0429bb5479f5880ff3a0f31cda635\")>\ndata = {'bins': []}, user_uprn = 'UPRN100010382247', user_postcode = 'PR6 7PG'\nweb_driver = 'http://localhost:4444', headless = True\nuser_agent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            user_uprn = kwargs.get(\"uprn\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_uprn(user_uprn)\n            check_postcode(user_postcode)\n    \n            # Create Selenium webdriver\n            user_agent = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\"\n            driver = create_webdriver(web_driver, headless, user_agent, __name__)\n            driver.get(\"https://myaccount.chorley.gov.uk/wastecollections.aspx\")\n    \n            # Accept cookies banner\n            cookieBanner = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located((By.ID, \"PrivacyPolicyNotification\"))\n            )\n            cookieClose = cookieBanner.find_element(\n                By.CSS_SELECTOR, \"span.ui-icon-circle-close\"\n            )\n            cookieClose.click()\n    \n            # Populate postcode field\n            inputElement_postcode = driver.find_element(\n                By.ID,\n                \"MainContent_addressSearch_txtPostCodeLookup\",\n            )\n            inputElement_postcode.send_keys(user_postcode)\n    \n            # Click search button\n            findAddress = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.ID,\n                        \"MainContent_addressSearch_btnFindAddress\",\n                    )\n                )\n            )\n            findAddress.click()\n    \n            time.sleep(1)\n    \n            # Wait for the 'Select address' dropdown to appear and select option matching UPRN\n            dropdown = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.ID,\n                        \"MainContent_addressSearch_ddlAddress\",\n                    )\n                )\n            )\n            # Create a 'Select' for it, then select the matching URPN option\n            dropdownSelect = Select(dropdown)\n            dropdownSelect.select_by_value(user_uprn)\n    \n            # Wait for the submit button to appear, then click it to get the collection dates\n            submit = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located((By.ID, \"MainContent_btnSearch\"))\n            )\n            submit.click()\n    \n            soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n            # Get the property details\n            property_details = soup.find(\n                \"table\",\n                {\"class\": \"WasteCollection\"},\n            )\n    \n            # Get the dates\n>           for row in property_details.tbody.find_all(\"tr\", recursive=False):\nE           AttributeError: 'NoneType' object has no attribute 'tbody'\n\nuk_bin_collection/uk_bin_collection/councils/ChorleyCouncil.py:106: AttributeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'tbody'","statusTrace":"fixturefunc = <function scrape_step at 0x7f86e347dda0>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChorleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f86edfec050>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ChorleyCouncil.CouncilClass object at 0x7f86f5ac4d70>, page = ''\nkwargs = {'council_module_str': 'ChorleyCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"bbd0429bb5479f5880ff3a0f31cda635\")>\ndata = {'bins': []}, user_uprn = 'UPRN100010382247', user_postcode = 'PR6 7PG'\nweb_driver = 'http://localhost:4444', headless = True\nuser_agent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            user_uprn = kwargs.get(\"uprn\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_uprn(user_uprn)\n            check_postcode(user_postcode)\n    \n            # Create Selenium webdriver\n            user_agent = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\"\n            driver = create_webdriver(web_driver, headless, user_agent, __name__)\n            driver.get(\"https://myaccount.chorley.gov.uk/wastecollections.aspx\")\n    \n            # Accept cookies banner\n            cookieBanner = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located((By.ID, \"PrivacyPolicyNotification\"))\n            )\n            cookieClose = cookieBanner.find_element(\n                By.CSS_SELECTOR, \"span.ui-icon-circle-close\"\n            )\n            cookieClose.click()\n    \n            # Populate postcode field\n            inputElement_postcode = driver.find_element(\n                By.ID,\n                \"MainContent_addressSearch_txtPostCodeLookup\",\n            )\n            inputElement_postcode.send_keys(user_postcode)\n    \n            # Click search button\n            findAddress = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.ID,\n                        \"MainContent_addressSearch_btnFindAddress\",\n                    )\n                )\n            )\n            findAddress.click()\n    \n            time.sleep(1)\n    \n            # Wait for the 'Select address' dropdown to appear and select option matching UPRN\n            dropdown = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.ID,\n                        \"MainContent_addressSearch_ddlAddress\",\n                    )\n                )\n            )\n            # Create a 'Select' for it, then select the matching URPN option\n            dropdownSelect = Select(dropdown)\n            dropdownSelect.select_by_value(user_uprn)\n    \n            # Wait for the submit button to appear, then click it to get the collection dates\n            submit = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located((By.ID, \"MainContent_btnSearch\"))\n            )\n            submit.click()\n    \n            soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n            # Get the property details\n            property_details = soup.find(\n                \"table\",\n                {\"class\": \"WasteCollection\"},\n            )\n    \n            # Get the dates\n>           for row in property_details.tbody.find_all(\"tr\", recursive=False):\nE           AttributeError: 'NoneType' object has no attribute 'tbody'\n\nuk_bin_collection/uk_bin_collection/councils/ChorleyCouncil.py:106: AttributeError","steps":[{"name":"Given the council","time":{"start":1728086791949,"stop":1728086791950,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1728086791950,"stop":1728087132890,"duration":340940},"status":"failed","statusMessage":"'NoneType' object has no attribute 'tbody'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'tbody'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a471c6242c8a8ef4","name":"stdout","source":"a471c6242c8a8ef4.txt","type":"text/plain","size":103}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1789-434"},{"name":"thread","value":"2832-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ChorleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":157,"unknown":0,"total":162},"items":[{"uid":"4aa1176add83f290","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2152//#testresult/4aa1176add83f290","status":"passed","time":{"start":1728000430770,"stop":1728001032658,"duration":601888}},{"uid":"9d9e80bc7ed60ec1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2148//#testresult/9d9e80bc7ed60ec1","status":"passed","time":{"start":1727932039262,"stop":1727932610325,"duration":571063}},{"uid":"a2de847f7cfadf5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2146//#testresult/a2de847f7cfadf5","status":"passed","time":{"start":1727913822625,"stop":1727914438809,"duration":616184}},{"uid":"d1a2ed0213b31773","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2139//#testresult/d1a2ed0213b31773","status":"passed","time":{"start":1727827359891,"stop":1727827952664,"duration":592773}},{"uid":"572b72a9e05b8c23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2138//#testresult/572b72a9e05b8c23","status":"passed","time":{"start":1727740955119,"stop":1727741572551,"duration":617432}},{"uid":"53af580ead48fb43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2137//#testresult/53af580ead48fb43","status":"passed","time":{"start":1727654553918,"stop":1727655176586,"duration":622668}},{"uid":"9e5eb72c9a132af8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2136//#testresult/9e5eb72c9a132af8","status":"passed","time":{"start":1727568155938,"stop":1727568755601,"duration":599663}},{"uid":"947854cf7dbc49c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2135//#testresult/947854cf7dbc49c5","status":"passed","time":{"start":1727481763495,"stop":1727482364415,"duration":600920}},{"uid":"9ed057634eb7bc1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2131//#testresult/9ed057634eb7bc1","status":"passed","time":{"start":1727421715042,"stop":1727422310594,"duration":595552}},{"uid":"4417ce9398937a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2130//#testresult/4417ce9398937a","status":"passed","time":{"start":1727395385199,"stop":1727395974437,"duration":589238}},{"uid":"529ce19ce67ffc88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2129//#testresult/529ce19ce67ffc88","status":"passed","time":{"start":1727308966601,"stop":1727309586367,"duration":619766}},{"uid":"8a69776f047b5f8c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2128//#testresult/8a69776f047b5f8c","status":"passed","time":{"start":1727222577301,"stop":1727223161618,"duration":584317}},{"uid":"999076674a96bd0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2127//#testresult/999076674a96bd0a","status":"passed","time":{"start":1727136181889,"stop":1727136916811,"duration":734922}},{"uid":"d619057df40ad04d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2126//#testresult/d619057df40ad04d","status":"passed","time":{"start":1727049748800,"stop":1727050551087,"duration":802287}},{"uid":"c2984efd61cc65c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2125//#testresult/c2984efd61cc65c","status":"passed","time":{"start":1726963428867,"stop":1726964074933,"duration":646066}},{"uid":"ffb5591bc33a51de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2124//#testresult/ffb5591bc33a51de","status":"passed","time":{"start":1726877012217,"stop":1726877732534,"duration":720317}},{"uid":"7e54fe6ca442b279","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2123//#testresult/7e54fe6ca442b279","status":"passed","time":{"start":1726790610001,"stop":1726791210198,"duration":600197}},{"uid":"ad51374fc6795b38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2122//#testresult/ad51374fc6795b38","status":"passed","time":{"start":1726704297854,"stop":1726704886765,"duration":588911}},{"uid":"bd6e558ac03005c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2121//#testresult/bd6e558ac03005c0","status":"passed","time":{"start":1726617805282,"stop":1726618424093,"duration":618811}},{"uid":"59fcb3a820d354e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2120//#testresult/59fcb3a820d354e7","status":"passed","time":{"start":1726531401116,"stop":1726532052356,"duration":651240}}]},"tags":[]},"source":"92bbe1c190e5777c.json","parameterValues":["ChorleyCouncil"]}