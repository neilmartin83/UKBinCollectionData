{"uid":"8e92f831ddd6fb41","name":"Validate Council Output [NorthNorthamptonshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"92c0f84b87cb9703264ef6f7bea152ee","time":{"start":1728087376168,"stop":1728087406784,"duration":30616},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7fce135820c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fce261397c0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7fce1230a3c0>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', today = 1728087376000\ndateforurl = '2024-10-05', dateforurl2 = '2024-11-16'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7fce135820c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fce261397c0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7fce1230a3c0>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', today = 1728087376000\ndateforurl = '2024-10-05', dateforurl2 = '2024-11-16'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","steps":[{"name":"Given the council","time":{"start":1728087376168,"stop":1728087376168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1728087376168,"stop":1728087406784,"duration":30616},"status":"failed","statusMessage":"No bin data found for provided UPRN..","statusTrace":"ValueError: No bin data found for provided UPRN..\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"231a8bffffa0fff","name":"stdout","source":"231a8bffffa0fff.txt","type":"text/plain","size":55}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1789-434"},{"name":"thread","value":"2835-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":150,"unknown":0,"total":161},"items":[{"uid":"eeada11e6e421be4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2152//#testresult/eeada11e6e421be4","status":"passed","time":{"start":1728001283621,"stop":1728001287306,"duration":3685}},{"uid":"9e985cc6c012898f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2148//#testresult/9e985cc6c012898f","status":"passed","time":{"start":1727932955110,"stop":1727932955780,"duration":670}},{"uid":"23f7589b15fa840c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2146//#testresult/23f7589b15fa840c","status":"passed","time":{"start":1727914741767,"stop":1727914751135,"duration":9368}},{"uid":"aeae96357c5d43d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2139//#testresult/aeae96357c5d43d7","status":"passed","time":{"start":1727828278578,"stop":1727828281432,"duration":2854}},{"uid":"401385b0eb40b05c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2138//#testresult/401385b0eb40b05c","status":"passed","time":{"start":1727741938071,"stop":1727741945160,"duration":7089}},{"uid":"f3af7da6097bfb47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2137//#testresult/f3af7da6097bfb47","status":"passed","time":{"start":1727655532982,"stop":1727655534232,"duration":1250}},{"uid":"71b85d4c0543ed48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2136//#testresult/71b85d4c0543ed48","status":"passed","time":{"start":1727569199076,"stop":1727569200575,"duration":1499}},{"uid":"9bdd51459fbc9393","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2135//#testresult/9bdd51459fbc9393","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN..","time":{"start":1727482769120,"stop":1727482799718,"duration":30598}},{"uid":"9af9c01fd410ff58","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2131//#testresult/9af9c01fd410ff58","status":"passed","time":{"start":1727422671796,"stop":1727422673210,"duration":1414}},{"uid":"c25e4ecca44fd988","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2130//#testresult/c25e4ecca44fd988","status":"passed","time":{"start":1727396437511,"stop":1727396441880,"duration":4369}},{"uid":"f15b891a84aee387","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2129//#testresult/f15b891a84aee387","status":"passed","time":{"start":1727309944085,"stop":1727309949180,"duration":5095}},{"uid":"15f7f4fb057631e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2128//#testresult/15f7f4fb057631e9","status":"passed","time":{"start":1727223602003,"stop":1727223602751,"duration":748}},{"uid":"75ec0b6196b33580","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2127//#testresult/75ec0b6196b33580","status":"passed","time":{"start":1727137228939,"stop":1727137231385,"duration":2446}},{"uid":"d38ed8831bb2b36d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2126//#testresult/d38ed8831bb2b36d","status":"passed","time":{"start":1727050912155,"stop":1727050916623,"duration":4468}},{"uid":"346a9fa5d166b9c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2125//#testresult/346a9fa5d166b9c5","status":"passed","time":{"start":1726964425934,"stop":1726964430164,"duration":4230}},{"uid":"7be3dc9d6ee92661","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2124//#testresult/7be3dc9d6ee92661","status":"passed","time":{"start":1726878117500,"stop":1726878119986,"duration":2486}},{"uid":"a0792df841d31344","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2123//#testresult/a0792df841d31344","status":"passed","time":{"start":1726791634589,"stop":1726791635415,"duration":826}},{"uid":"e9a958a98f86255","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2122//#testresult/e9a958a98f86255","status":"passed","time":{"start":1726705185829,"stop":1726705194391,"duration":8562}},{"uid":"b01590934f63088b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2121//#testresult/b01590934f63088b","status":"passed","time":{"start":1726618767709,"stop":1726618778399,"duration":10690}},{"uid":"829d7e4bad803aa1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2120//#testresult/829d7e4bad803aa1","status":"passed","time":{"start":1726532457106,"stop":1726532467805,"duration":10699}}]},"tags":[]},"source":"8e92f831ddd6fb41.json","parameterValues":["NorthNorthamptonshireCouncil"]}